# Generated by Django 4.2.7 on 2025-08-18 22:39

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('events', '0011_fix_user_registrations_relation'),
    ]

    operations = [
        migrations.AddField(
            model_name='event',
            name='event_type',
            field=models.CharField(choices=[('physical', 'Événement physique'), ('virtual', 'Événement virtuel')], default='physical', max_length=10, verbose_name="Type d'événement"),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='virtual_access_code',
            field=models.CharField(blank=True, max_length=100, null=True, verbose_name="Code d'accès virtuel"),
        ),
        migrations.AddField(
            model_name='eventregistration',
            name='virtual_access_sent',
            field=models.BooleanField(default=False, verbose_name="Code d'accès envoyé"),
        ),
        migrations.AlterField(
            model_name='notificationlog',
            name='type',
            field=models.CharField(choices=[('reminder_1d', 'Rappel J-1'), ('reminder_1h', 'Rappel 1h avant'), ('reminder_day', 'Rappel jour J'), ('update', 'Mise à jour'), ('thank_you', 'Remerciement'), ('virtual_access', "Code d'accès virtuel"), ('virtual_reminder', 'Rappel événement virtuel')], max_length=20),
        ),
        migrations.CreateModel(
            name='VirtualEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('platform', models.CharField(choices=[('zoom', 'Zoom'), ('youtube_live', 'YouTube Live'), ('teams', 'Microsoft Teams'), ('meet', 'Google Meet'), ('webex', 'Cisco Webex'), ('custom', 'Plateforme personnalisée')], default='zoom', max_length=20, verbose_name='Plateforme')),
                ('meeting_id', models.CharField(blank=True, max_length=100, verbose_name='ID de réunion')),
                ('meeting_password', models.CharField(blank=True, max_length=100, verbose_name='Mot de passe de réunion')),
                ('meeting_url', models.URLField(blank=True, verbose_name='URL de la réunion')),
                ('auto_record', models.BooleanField(default=False, verbose_name='Enregistrement automatique')),
                ('allow_chat', models.BooleanField(default=True, verbose_name='Autoriser le chat')),
                ('allow_screen_sharing', models.BooleanField(default=True, verbose_name="Autoriser le partage d'écran")),
                ('waiting_room', models.BooleanField(default=True, verbose_name="Salle d'attente")),
                ('recording_url', models.URLField(blank=True, verbose_name='URL de la rediffusion')),
                ('recording_available', models.BooleanField(default=False, verbose_name='Rediffusion disponible')),
                ('recording_expires_at', models.DateTimeField(blank=True, null=True, verbose_name='Expiration de la rediffusion')),
                ('access_instructions', models.TextField(blank=True, verbose_name="Instructions d'accès")),
                ('technical_requirements', models.TextField(blank=True, verbose_name='Exigences techniques')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='virtual_details', to='events.event')),
            ],
            options={
                'verbose_name': "Détails de l'événement virtuel",
                'verbose_name_plural': 'Détails des événements virtuels',
            },
        ),
        migrations.CreateModel(
            name='VirtualEventInteraction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('interaction_type', models.CharField(choices=[('like', "J'aime"), ('comment', 'Commentaire'), ('share', 'Partage'), ('rating', 'Évaluation')], max_length=20, verbose_name="Type d'interaction")),
                ('content', models.TextField(blank=True, verbose_name='Contenu')),
                ('rating', models.PositiveIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Note')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='Adresse IP')),
                ('user_agent', models.TextField(blank=True, verbose_name='User Agent')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='interactions', to='events.event', verbose_name='Événement')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_interactions', to=settings.AUTH_USER_MODEL, verbose_name='Utilisateur')),
            ],
            options={
                'verbose_name': 'Interaction événement virtuel',
                'verbose_name_plural': 'Interactions événements virtuels',
                'ordering': ['-created_at'],
                'unique_together': {('event', 'user', 'interaction_type')},
            },
        ),
    ]
